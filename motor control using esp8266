#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

const char* ssid = "Your_SSID";
const char* password = "Your_PASSWORD";

ESP8266WebServer server(80);

// Motor A
#define IN1 D1
#define IN2 D2
#define ENA D3

// Motor B
#define IN3 D5
#define IN4 D6
#define ENB D7

void setup() {
  Serial.begin(115200);

  pinMode(IN1, OUTPUT); pinMode(IN2, OUTPUT); pinMode(ENA, OUTPUT);
  pinMode(IN3, OUTPUT); pinMode(IN4, OUTPUT); pinMode(ENB, OUTPUT);

  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500); Serial.print(".");
  }
  Serial.println("\nConnected. IP address: " + WiFi.localIP().toString());

  server.on("/", handleRoot);
  server.on("/motorA", controlMotorA);
  server.on("/motorB", controlMotorB);

  server.begin();
}

void loop() {
  server.handleClient();
}

void handleRoot() {
  String html = R"=====(
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>ESP8266 Motor Control</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          background: #f4f4f4;
          margin: 0;
          padding: 0;
          display: flex;
          flex-direction: column;
          align-items: center;
        }
        h1 { color: #003366; margin-top: 20px; }
        .motor {
          background: #ffffff;
          padding: 20px;
          margin: 20px;
          width: 90%;
          max-width: 400px;
          box-shadow: 0 0 10px rgba(0,0,0,0.1);
          border-radius: 10px;
        }
        button {
          padding: 10px 20px;
          margin: 5px;
          border: none;
          background-color: #007bff;
          color: white;
          border-radius: 5px;
          font-size: 16px;
          cursor: pointer;
        }
        button:hover {
          background-color: #0056b3;
        }
        input[type=range] {
          width: 100%;
        }
        footer {
          text-align: center;
          font-size: 12px;
          color: #888;
          padding: 10px;
        }
        /* Popup styles */
        #popup {
          position: fixed;
          top: 0; left: 0;
          width: 100%;
          height: 100%;
          background: rgba(0, 0, 0, 0.8);
          color: white;
          display: flex;
          justify-content: center;
          align-items: center;
          font-size: 24px;
          z-index: 9999;
          flex-direction: column;
        }
        #popup button {
          margin-top: 20px;
          background: #28a745;
        }
        @media (max-width: 600px) {
          h1 { font-size: 22px; }
          button { font-size: 14px; padding: 8px 15px; }
        }
      </style>
    </head>
    <body>
      <div id="popup">
        <div>ðŸ”§ Made by <strong>Biltu Samanta</strong></div>
        <button onclick="closePopup()">Enter</button>
      </div>

      <h1>ESP8266 Motor Control</h1>

      <div class="motor">
        <h2>Motor A</h2>
        <button onclick="controlMotor('motorA','forward')">Forward</button>
        <button onclick="controlMotor('motorA','backward')">Backward</button>
        <button onclick="controlMotor('motorA','stop')">Stop</button><br><br>
        <input type="range" id="speedA" min="0" max="255" value="150" oninput="updateSpeed('A')">
        <p>Speed: <span id="speedAValue">150</span></p>
      </div>

      <div class="motor">
        <h2>Motor B</h2>
        <button onclick="controlMotor('motorB','forward')">Forward</button>
        <button onclick="controlMotor('motorB','backward')">Backward</button>
        <button onclick="controlMotor('motorB','stop')">Stop</button><br><br>
        <input type="range" id="speedB" min="0" max="255" value="150" oninput="updateSpeed('B')">
        <p>Speed: <span id="speedBValue">150</span></p>
      </div>

      <footer>MADE BY BILTU SAMANTA</footer>

      <script>
        let speedA = 150;
        let speedB = 150;

        function controlMotor(motor, direction) {
          let speed = (motor === 'motorA') ? speedA : speedB;
          fetch(`/${motor}?dir=${direction}&speed=${speed}`);
        }

        function updateSpeed(motorID) {
          let slider = document.getElementById("speed" + motorID);
          let value = slider.value;
          document.getElementById("speed" + motorID + "Value").innerText = value;
          if (motorID === 'A') speedA = value;
          else speedB = value;
        }

        function closePopup() {
          document.getElementById("popup").style.display = "none";
        }
      </script>
    </body>
    </html>
  )=====";

  server.send(200, "text/html", html);
}

void controlMotorA() {
  String dir = server.arg("dir");
  int speed = server.arg("speed").toInt();

  if (dir == "forward") {
    digitalWrite(IN1, HIGH); digitalWrite(IN2, LOW);
  } else if (dir == "backward") {
    digitalWrite(IN1, LOW); digitalWrite(IN2, HIGH);
  } else {
    digitalWrite(IN1, LOW); digitalWrite(IN2, LOW);
  }
  analogWrite(ENA, speed);
  server.send(200, "text/plain", "Motor A: " + dir + " at speed " + speed);
}

void controlMotorB() {
  String dir = server.arg("dir");
  int speed = server.arg("speed").toInt();

  if (dir == "forward") {
    digitalWrite(IN3, HIGH); digitalWrite(IN4, LOW);
  } else if (dir == "backward") {
    digitalWrite(IN3, LOW); digitalWrite(IN4, HIGH);
  } else {
    digitalWrite(IN3, LOW); digitalWrite(IN4, LOW);
  }
  analogWrite(ENB, speed);
  server.send(200, "text/plain", "Motor B: " + dir + " at speed " + speed);
}
